ARM_PREFIX=arm-none-eabi-
CC=$(ARM_PREFIX)gcc
LD=$(ARM_PREFIX)gcc
AR=$(ARM_PREFIX)ar
OBJCOPY=$(ARM_PREFIX)objcopy
INCLUDE_DIR=$(PROJECT_ROOT)/include
COMMON_FLAGS=-Wall -Wextra -march=armv7-a -mtune=cortex-a8 -mfpu=neon -ftree-vectorize -ffast-math -mfloat-abi=softfp -g -I$(INCLUDE_DIR)
CC_FLAGS=$(COMMON_FLAGS) -std=gnu99
ASM_FLAGS=$(COMMON_FLAGS)
LD_FLAGS=-nostdlib -lgcc

C_SOURCES=$(wildcard *.c)
C_OBJS=$(C_SOURCES:.c=.o)
ASM_SOURCES=$(wildcard *.S)
ASM_OBJS=$(ASM_SOURCES:.S=_asm.o)
SUBSYSTEMS_OBJS=$(foreach s,$(SUBSYSTEMS),$s/$s.o)

build: $(OUTPUT)

%.o: %.c
	@echo -e "    \033[1m\033[34m[CC] \033[37m$<\033[0m"
	@$(CC) -c $(CC_FLAGS) $< -o $@

%_asm.o: %.S
	@echo -e "    \033[1m\033[35m[AS] \033[37m$<\033[0m"
	@$(CC) -c $(ASM_FLAGS) $< -o $@

$(SUBSYSTEMS):
	@$(MAKE) -C $@ $(MAKECMDGOALS)

$(OUTPUT): $(ASM_OBJS) $(C_OBJS) $(SUBSYSTEMS_OBJS)
	@$(LD) $(ASM_OBJS) $(C_OBJS) $(SUBSYSTEMS_OBJS) -o $@ -r $(LD_FLAGS) 
	@echo -e "    \033[1m\033[33m[LD] \033[37m$@\033[0m"

clean: $(SUBSYSTEMS) clean_extra
	@rm -rf *.o

.PHONY: build clean $(SUBSYSTEMS) clean_extra
